// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParqueoApp3.Data;

#nullable disable

namespace ParqueoApp3.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ParqueoApp3.Models.Asig_vehiculo", b =>
                {
                    b.Property<int>("id_asig_vehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_asig_vehiculo"));

                    b.Property<DateTime>("fecha_ingreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_salida")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_espacio")
                        .HasColumnType("int");

                    b.Property<int>("id_vehiculo")
                        .HasColumnType("int");

                    b.HasKey("id_asig_vehiculo");

                    b.HasIndex("id_espacio");

                    b.HasIndex("id_vehiculo");

                    b.ToTable("Asig_vehiculos");
                });

            modelBuilder.Entity("ParqueoApp3.Models.Espacio", b =>
                {
                    b.Property<int>("id_espacio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_espacio"));

                    b.Property<bool>("disponibilidad")
                        .HasColumnType("bit");

                    b.Property<int>("id_parqueo")
                        .HasColumnType("int");

                    b.Property<string>("tipo_espacio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_espacio");

                    b.HasIndex("id_parqueo");

                    b.ToTable("Espacio", (string)null);
                });

            modelBuilder.Entity("ParqueoApp3.Models.Parqueo", b =>
                {
                    b.Property<int>("id_parqueo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_parqueo"));

                    b.Property<string>("nombre_parqueo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ubicacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_parqueo");

                    b.ToTable("Parqueo", (string)null);
                });

            modelBuilder.Entity("ParqueoApp3.Models.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_usuario");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("ParqueoApp3.Models.Vehiculo", b =>
                {
                    b.Property<int>("id_vehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_vehiculo"));

                    b.Property<int>("id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("placa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("tipo_vehiculo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id_vehiculo");

                    b.HasIndex("id_usuario");

                    b.ToTable("Vehiculo", (string)null);
                });

            modelBuilder.Entity("ParqueoApp3.Models.Asig_vehiculo", b =>
                {
                    b.HasOne("ParqueoApp3.Models.Espacio", null)
                        .WithMany()
                        .HasForeignKey("id_espacio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ParqueoApp3.Models.Vehiculo", null)
                        .WithMany()
                        .HasForeignKey("id_vehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParqueoApp3.Models.Espacio", b =>
                {
                    b.HasOne("ParqueoApp3.Models.Parqueo", null)
                        .WithMany()
                        .HasForeignKey("id_parqueo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ParqueoApp3.Models.Vehiculo", b =>
                {
                    b.HasOne("ParqueoApp3.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
